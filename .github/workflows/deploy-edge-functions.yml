
name: Deploy Edge Functions

on:
  push:
    paths:
      - 'supabase/functions/**'  # Trigger on changes to any function

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Check out repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 2  # Ensure at least one previous commit is available

      - name: Setup Supabase CLI
        uses: supabase/setup-cli@v1
        with:
          version: latest

      - name: Get previous commit
        id: prev_commit
        run: echo "PREV_COMMIT=$(git rev-parse HEAD^)" >> $GITHUB_ENV

      - name: Detect changed functions
        id: changed-functions
        run: |
          git fetch --unshallow || true  # Ensure history is available
          CHANGED_DIRS=$(git diff --name-only ${{ env.PREV_COMMIT }} HEAD | grep '^supabase/functions/' | awk -F'/' '{print $3}' | sort -u | xargs)
          echo "CHANGED_DIRS=${CHANGED_DIRS}" >> $GITHUB_ENV

      - name: Set Supabase project variables
        id: set-vars
        run: |
          if [[ "${{ github.ref }}" == "refs/heads/main" ]]; then
            echo "SUPABASE_PROJECT_ID=${{ secrets.TESTING_PROJECT_ID }}" >> $GITHUB_ENV
            echo "SUPABASE_ACCESS_TOKEN=${{ secrets.TESTING_ACCESS_TOKEN }}" >> $GITHUB_ENV
            echo "Deploying to testing environment"
          else
            echo "SUPABASE_PROJECT_ID=${{ secrets.SUPABASE_PROJECT_ID }}" >> $GITHUB_ENV
            echo "SUPABASE_ACCESS_TOKEN=${{ secrets.SUPABASE_ACCESS_TOKEN }}" >> $GITHUB_ENV
            echo "Deploying to production environment"
          fi

      - name: Deploy changed functions
        if: env.CHANGED_DIRS != ''
        run: |
          for function in $CHANGED_DIRS; do
            echo "Deploying function: $function to project: $SUPABASE_PROJECT_ID"
            supabase functions deploy $function --project-ref $SUPABASE_PROJECT_ID --no-verify-jwt
          done

